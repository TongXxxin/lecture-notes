Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# Node\.js

## Global/全局
- LINK
<pre>http://www.runoob.com/nodejs/nodejs-global-object.html</pre>
- NOTE
<pre>&#27983;&#35272;&#22120; JavaScript &#20013; window &#26159;&#20840;&#23616;&#23545;&#35937;&#65292;
Node.js &#20013;&#30340;&#20840;&#23616;&#23545;&#35937;&#26159; global</pre>

### console

#### console\.log\(\[data\]\[, \.\.\.\]\)

#### 进阶
> collapsed=`true`


##### console\.info\(\[data\]\[, \.\.\.\]\)
> collapsed=`true`,fillColor=`#30BE41`


##### console\.error\(\[data\]\[, \.\.\.\]\)
> collapsed=`true`,fillColor=`#30BE41`


##### console\.warn\(\[data\]\[, \.\.\.\]\)
> collapsed=`true`,fillColor=`#30BE41`


##### console\.dir\(obj\[, options\]\)

##### console\.time\(label\)

##### console\.trace\(message\[, \.\.\.\]\)
> fillColor=`#30BE41`


##### console\.assert\(value\[, message\]\[, \.\.\.\]\)

### setTimeout\(cb, ms\)
- TOPIC
<pre>16034DEE4B3A</pre>

### clearTimeout\(t\)
> topicLinkUID=`16034DEE4B3A`


### setInterval\(cb, ms\)

### 进阶

#### \_\_dirname

#### \_\_filename

#### process

##### 事件
> collapsed=`true`


###### exit
> fillColor=`#30BE41`


####### process\.on\('exit', function\(code\)\{\}\)
> fillColor=`#30BE41`


###### beforeExit
> topicLinkUID=`160350CD62BA`


###### uncaughtException

###### Signal 事件

##### 属性
> collapsed=`true`


###### stdout

###### stderr

###### stdin

###### argv
> fillColor=`#30BE41`


####### \['node','脚本名','其它参数'\.\.\.\]
> fillColor=`#30BE41`


###### execPath

####### 前脚本的 Node 二进制文件的绝对路径

###### execArgv

###### env

###### exitCode

###### version

###### versions

###### config

###### pid
> fillColor=`#30BE41`


####### 进程号
> fillColor=`#30BE41`


###### title

####### 进程名，默认值为"node"，可以自定义该值。

###### arch

####### CPU 的架构：'arm'、'ia32' 或者 'x64'

###### platform

####### 平台系统 'darwin', 'freebsd', 'linux', 'sunos' 或 'win32'

###### mainModule

##### 方法
> collapsed=`true`


###### abort\(\)

###### chdir\(directory\)

####### 改变当前工作进程的目录，如果操作失败抛出异常。

###### cwd\(\)

####### 返回当前进程的工作目录

###### exit\(\[code\]\)
> fillColor=`#FFBD1C`


####### 使用指定的 code 结束进程。如果忽略，将会使用 code 0。

###### getgid\(\)

###### setgid\(id\)

###### getuid\(\)

###### setuid\(id\)

###### getgroups\(\)

###### setgroups\(groups\)

###### initgroups\(user, extra\_group\)

###### kill\(pid\[, signal\]\)
> fillColor=`#30BE41`


####### 发送信号给进程\. pid 是进程id，并且 signal 是发送的信号的字符串描述。信号名是字符串，比如 'SIGINT' 或 'SIGHUP'。如果忽略，信号会是 'SIGTERM'。

###### memoryUsage\(\)
> fillColor=`#30BE41`


####### 返回一个对象，描述了 Node 进程所用的内存状况，单位为字节。

###### nextTick\(callback\)

###### umask\(\[mask\]\)

###### uptime\(\)
> fillColor=`#FFBD1C`


####### 返回 Node 已经运行的秒数。

###### hrtime\(\)
> fillColor=`#FFBD1C`


####### \[seconds, nanoseconds\]数组<br/>与日期无关<br/>主要用途是可以通过精确的时间间隔，来衡量程序的性能。

## Global/全局

## 
> leftSide=`true`

